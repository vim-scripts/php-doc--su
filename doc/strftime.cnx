strftime -- 根据区域设置格式化本地时间／日期

  string strftime(string format [, int timestamp])~

返回用给定的格式字串对给出的 {timestamp}
进行格式输出后的字符串。如果没有给出时间戳则用当前的本地时间。月份和星期几以及其它和语言有关的字符串写法和用
|setlocale| 设定的当前的区域有关。

格式字串能识别下列转换标记： %a - 当前区域星期几的简写

%A - 当前区域星期几的全称

%b - 当前区域月份的简写

%B - 当前区域月份的全称

%c - 当前区域首选的日期时间表达

%C - 世纪值（年份除以 100 后取整，范围从 00 到 99）

%d - 月份中的第几天，十进制数字（范围从 01 到 31）

%D - 和 %m/%d/%y 一样

%e -
月份中的第几天，十进制数字，一位的数字前会加上一个空格（范围从
' 1' 到 '31'）

%g - 和 %G 一样，但是没有世纪

%G - 4 位数的年份，符合 ISO 星期数（参见 %V）。和 %V
的格式和值一样，只除了如果 ISO
星期数属于前一年或者后一年，则使用那一年。

%h - 和 %b 一样

%H - 24 小时制的十进制小时数（范围从 00 到 23）

%I - 12 小时制的十进制小时数（范围从 00 到 12）

%j - 年份中的第几天，十进制数（范围从 001 到 366）

%m - 十进制月份（范围从 01 到 12）

%M - 十进制分钟数

%n - 换行符

%p - 根据给定的时间值为 `am' 或
`pm'，或者当前区域设置中的相应字符串

%r - 用 a.m. 和 p.m. 符号的时间

%R - 24 小时符号的时间

%S - 十进制秒数

%t - 制表符

%T - 当前时间，和 %H:%M:%S 一样

%u - 星期几的十进制数表达 [1,7]，1 表示星期一

尽管 ISO 9889:1999（当前的 C
标准）明确指出一周从星期一开始，但是 Sun Solaris
的一周似乎从星期天开始并作为 1。

%U -
本年的第几周，从第一周的第一个星期天作为第一天开始

%V - 本年第几周的 ISO 8601:1988 格式，范围从 01 到 53，第 1
周是本年第一个至少还有 4
天的星期，星期一作为每周的第一天。（用 %G 或者 %g
作为指定时间戳相应周数的年份组成。）

%W -
本年的第几周数，从第一周的第一个星期一作为第一天开始

%w - 星期中的第几天，星期天为 0

%x - 当前区域首选的时间表示法，不包括时间

%X - 当前区域首选的时间表示法，不包括日期

%y - 没有世纪数的十进制年份（范围从 00 到 99）

%Y - 包括世纪数的十进制年份

%Z 或 %z - 时区名或缩写

%% - 文字上的 `%' 字符

可能不是所有的转换标记都被 C 库文件支持，这种情况下
PHP 的 |strftime|
也不支持。此外，不是所有的平台都支持负的时间戳，因此日期的范围可能限定在不早于
Unix 纪元。这意味着例如 %e, %T，%R 和
%D（可能更多）以及早于 Jan 1, 1970 的时间在 Windows，一些
Linux 发行版本，以及其它几个操作系统中无效。对于 Windows
系统，所支持的转换标记可在 MSDN 网站找到。

|strftime| 区域的例子

<?php >
  setlocale(LC_TIME, "C");
  echo strftime("%A");
  setlocale(LC_TIME, "fi_FI");
  echo strftime(" in Finnish is %A,");
  setlocale(LC_TIME, "fr_FR");
  echo strftime(" in French %A and");
  setlocale(LC_TIME, "de_DE");
  echo strftime(" in German %A.\n");
?>



本例在你的系统中安装有各自的区域设置后才能工作。 %G
和 %V，如果数字编号系统未能充分理解，基于 ISO 8601:1988
的星期数可能得出未预期的结果。见上面的 %V
和以下的例子。

ISO 8601:1988 week number example

<?php >
  /*     December 2002 / January 2003
  ISOWk  M   Tu  W   Thu F   Sa  Su
  ----- ----------------------------
  51     16  17  18  19  20  21  22
  52     23  24  25  26  27  28  29
  1      30  31   1   2   3   4   5
  2       6   7   8   9  10  11  12
  3      13  14  15  16  17  18  19   */
  
  // Outputs: 12/28/2002 - %V,%G,%Y = 52,2002,2002
  echo "12/28/2002 - %V,%G,%Y = " . strftime("%V,%G,%Y", strtotime("12/28/2002")) . "\n";
  
  // Outputs: 12/30/2002 - %V,%G,%Y = 1,2003,2002
  echo "12/30/2002 - %V,%G,%Y = " . strftime("%V,%G,%Y", strtotime("12/30/2002")) . "\n";
  
  // Outputs: 1/3/2003 - %V,%G,%Y = 1,2003,2003
  echo "1/3/2003 - %V,%G,%Y = " . strftime("%V,%G,%Y",strtotime("1/3/2003")) . "\n";
  
  // Outputs: 1/10/2003 - %V,%G,%Y = 2,2003,2003
  echo "1/10/2003 - %V,%G,%Y = " . strftime("%V,%G,%Y",strtotime("1/10/2003")) . "\n";
  
  
  
  /*     December 2004 / January 2005
  ISOWk  M   Tu  W   Thu F   Sa  Su
  ----- ----------------------------
  51     13  14  15  16  17  18  19
  52     20  21  22  23  24  25  26
  53     27  28  29  30  31   1   2
  1       3   4   5   6   7   8   9
  2      10  11  12  13  14  15  16   */
  
  // Outputs: 12/23/2004 - %V,%G,%Y = 52,2004,2004
  echo "12/23/2004 - %V,%G,%Y = " . strftime("%V,%G,%Y",strtotime("12/23/2004")) . "\n";
  
  // Outputs: 12/31/2004 - %V,%G,%Y = 53,2004,2004
  echo "12/31/2004 - %V,%G,%Y = " . strftime("%V,%G,%Y",strtotime("12/31/2004")) . "\n";
  
  // Outputs: 1/2/2005 - %V,%G,%Y = 53,2004,2005
  echo "1/2/2005 - %V,%G,%Y = " . strftime("%V,%G,%Y",strtotime("1/2/2005")) . "\n";
  
  // Outputs: 1/3/2005 - %V,%G,%Y = 1,2005,2005
  echo "1/3/2005 - %V,%G,%Y = " . strftime("%V,%G,%Y",strtotime("1/3/2005")) . "\n";
?>





参见 |setlocale|，|mktime|，|strptime| 以及 Open Group specification of
|strftime|。

vim:ft=help:
