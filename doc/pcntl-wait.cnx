pcntl_wait -- 等待或返回fork的子进程状态

  int pcntl_wait(int status [, int options])~

wait函数刮起当前进程的执行直到一个子进程退出或接收到一个信号要求中断当前进程或调用一个信号处理函数。
如果一个子进程在调用此函数时已经退出（俗称僵尸进程），此函数立刻返回。子进程使用的所有系统资源将
被释放。关于wait在您系统上工作的详细规范请查看您系统的wait（2）手册。

这个函数等同于以-1作为参数{pid}
的值并且没有{options}参数来调用|pcntl_waitpid| 函数。

{status} |pcntl_wait|将会存储状态信息到{status}
参数上，这个通过{status}参数返回的状态信息可以用以下函数
|pcntl_wifexited|, |pcntl_wifstopped|, |pcntl_wifsignaled|,
|pcntl_wexitstatus|, |pcntl_wtermsig|以及
|pcntl_wstopsig|获取其具体的值。

{options}
如果您的操作系统（多数BSD类系统）允许使用wait3，您可以提供可选的{options}
参数。如果这个参数没有提供，wait将会被用作系统调用。如果wait3不可用，提供参数
{options}不会有任何效果。{options}的值可以是0
或者以下两个常量或两个常量“或运算”结果（即两个常量代表意义都有效）。
{options}可用值 WNOHANG 如果没有子进程退出立刻返回。
WUNTRACED 子进程已经退出并且其状态未报告时返回。

|pcntl_wait|返回退出的子进程进程号，发生错误时返回-1,如果提供了
WNOHANG作为option（wait3可用的系统）并且没有可用子进程时返回0。

|pcntl_fork| |pcntl_signal| |pcntl_wifexited| |pcntl_wifstopped|
|pcntl_wifsignaled| |pcntl_wexitstatus| |pcntl_wtermsig| |pcntl_wstopsig|
|pcntl_waitpid|

vim:ft=help:
