eio_stat -- Get file status

  resource eio_stat(string path, int pri, mixed callback [, mixed data])~

|eio_stat| returns file status information in {result} argument of {callback}

The file path

The request priority: EIO_PRI_DEFAULT, EIO_PRI_MIN, EIO_PRI_MAX, or NULL. If
NULL passed, {pri} internally is set to EIO_PRI_DEFAULT.

{callback} function is called when the request is done. It should match the
following prototype:

  void callback($data, $result);

{$data} is custom data passed to the request. {$result} contains
request-specific result value; basically, the value returned by corresponding
system call.

Arbitrary variable passed to {callback}.

|eio_stat| returns request resource on success or FALSE on error. On success
assigns {result} argument of {callback} to an array.

|eio_stat| example

<?php >
  $tmp_filename = "eio-file.tmp";
  touch($tmp_filename);
  
  function my_res_cb($data, $result) {
      var_dump($data);
      var_dump($result);
  }
  
  function my_open_cb($data, $result) {
      eio_close($result);
      eio_event_loop();
  
      @unlink($data);
  }
  
  eio_stat($tmp_filename, EIO_PRI_DEFAULT, "my_res_cb", "eio_stat");
  eio_open($tmp_filename, EIO_O_RDONLY, NULL,
   EIO_PRI_DEFAULT, "my_open_cb", $tmp_filename);
  eio_event_loop();
?>

The above example will output something similar to:

  string(8) "eio_stat"
  array(12) {
    ["st_dev"]=>
    int(2050)
    ["st_ino"]=>
    int(2489173)
    ["st_mode"]=>
    int(33188)
    ["st_nlink"]=>
    int(1)
    ["st_uid"]=>
    int(1000)
    ["st_gid"]=>
    int(100)
    ["st_rdev"]=>
    int(0)
    ["st_blksize"]=>
    int(4096)
    ["st_blocks"]=>
    int(0)
    ["st_atime"]=>
    int(1318250380)
    ["st_mtime"]=>
    int(1318250380)
    ["st_ctime"]=>
    int(1318250380)
  }

vim:ft=help:
