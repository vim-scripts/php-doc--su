file_put_contents -- 将一个字符串写入文件

  int file_put_contents(string filename, string data [, int flags [, resource context]])~

和依次调用 |fopen|，|fwrite| 以及 |fclose| 功能一样。

参数 {data} 可以是数组（但不能为多维数组），这就相当于
file_put_contents($filename, join('', $array))

自 PHP 5.1.0 起，{data} 参数也可以被指定为 stream 资源，这里
stream
中所保存的缓存数据将被写入到指定文件中，这种用法就相似于使用
|stream_copy_to_stream| 函数。

{filename} 要被写入数据的文件名。

{data} 要写入的数据。类型可以是 string，array 或者是 stream
资源（如上面所说的那样）。

{flags} {flags} 可以是 FILE_USE_INCLUDE_PATH，FILE_APPEND 和／或
LOCK_EX（获得一个独占锁定），然而使用 FILE_USE_INCLUDE_PATH
时要特别谨慎。

{context} 一个 context 资源。

该函数将返回写入到文件内数据的字节数。

版本 说明 5.1.0 添加了对 LOCK_EX 的支持和 {data} 参数处理
stream 资源的功能。

此函数可安全用于二进制对象。

在 PHP 5.0.0 中增加了 对上下文(Context)的支持。 有关
上下文(Context) 的说明参见 。

如已启用fopen 包装器，在此函数中， URL
可作为文件名。关于如何指定文件名详见 |fopen|。各种 wapper
的不同功能请参见
，注意其用法及其可提供的预定义变量。

|fopen| |fwrite| |file_get_contents|

vim:ft=help:
